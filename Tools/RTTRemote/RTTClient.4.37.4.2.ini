### RTT Client v4.4
### by Dunc, 2024/07

# The preferred renderer to use:
# 0 = pick automatically (recommended!)
# 1 = Direct3D 9
# 2 = Direct3D 11
# 3 = Direct3D 12
# 4 = OpenGL
# 5 = OpenGL ES
# 6 = Software
RENDERER = 0

# RTT Client can connect to RTT Server via network, or read the
# local BMS RTT directly, w/o the need for running RTT Server.
# 0 = RTT Client read the local BMS RTT directly
# 1 = RTT Client will connect to RTT Server
NETWORKED = 0

# ONLY IN USE IF "NETWORKED = 0"!
# How often should the client poll the RTT are to check for changes?
# The higher the value, the more GPU/CPU load you generate.
# Note that this value does NOT affect the "smoothness" of the
# display animations. The display can not draw more frames than
# BMS is currently exporting to RTT (which by default is BMS FPS / 2).
FPS = 30

# ONLY IN USE IF "NETWORKED = 1"!
# The IP address and port where the server is running.
# Supports both IPv4 and IPv6.
HOST = 127.0.0.1
PORT = 44000

# ONLY IN USE IF "NETWORKED = 1"!
# If you use the client on a networked PC (not locally), it is
# possible not only to receive the RTT images, but also the "normal"
# shared memory areas. Just enable the ones that you want to access
# remotely, it will be created on the client side for you.
DATA_F4 = 0
DATA_BMS = 0
DATA_OSB = 0
DATA_IVIBE = 0

# ONLY IN USE IF "NETWORKED = 1"!
# If you use the client on a networked PC (not locally), it is
# possible not only to receive the RTT images, but also the "string"
# shared memory areas. Just enable the ones that you want to access
# remotely, it will be created on the client side for you.
STRING_STR = 0
STRING_DRW = 0

# These are the displays that we can render on the client. For configuration,
# simply pre- or postfix these strings with "USE_" or "_X", "_Y", "_W", "_H",
# "_ONTOP", like in the examples below.
# HUD
# PFL
# DED
# RWR
# MFDLEFT
# MFDRIGHT
# HMS

# The RWR is usually displayed without any grid/cirle lines (so you can use e.g.
# your own nice glas etchings). However, if you want some (very basic) RWR grid
# to be overlayed on the RWR, set the following to 1:
RWR_GRID = 0

# Which RTT displays do you want to show on the client side?
USE_HUD = 0
USE_PFL = 0
USE_DED = 0
USE_RWR = 0
USE_MFDLEFT = 1
USE_MFDRIGHT = 1
USE_HMS = 0

# Each display that you want to see must have at least TWO config
# entries: X and Y coordinate (of the upper left corner).
# Additionally, you can specify the width W and the height H of the
# display. If you do not specify width and height, the original
# size of the RTT will be used (but the "no connection placeholder"
# will not show the correct size until the server is actually sending
# valid data). Note that the X/Y coordinates originate in the upper
# left corner of your MAIN windows screen. So you can have negative
# coordinates if you e.g. use a monitor to the left or above the main
# screen.
# Furthermore, RTT Client can *try* to render displays "always on top",
# (ONTOP = 1, default 0) allowing you to overlay displays e.g. on the
# main BMS view.
# Examples:
MFDLEFT_X = 1100
MFDLEFT_Y = 10

MFDRIGHT_X = 1100
MFDRIGHT_Y = 500
MFDRIGHT_W = 500
MFDRIGHT_H = 500
MFDRIGHT_ONTOP = 1
